version: '3.8'

services:
 nginx:
   container_name: nginx
   image: nginx:latest
   ports:
     - "80:80"
     - "443:443"
   volumes:
     - ./nginx/nginx.conf:/etc/nginx/nginx.conf
     - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
   depends_on:
     - research-server
   command: >
     sh -c "
     nginx-debug -g 'daemon off; error_log /dev/stderr debug;'
     "
   healthcheck:
     test: ["CMD", "nginx", "-t"]
     interval: 30s
     timeout: 10s
     retries: 3
     start_period: 20s
   networks:
     - app-network
   logging:
     driver: "json-file"
     options:
       max-size: "10m"
       max-file: "3"
       tag: "{{.Name}}"

 postgres:
   container_name: postgres
   image: postgres:15
   environment:
     POSTGRES_USER: postgres
     POSTGRES_DB: research_db
     POSTGRES_PASSWORD: researchpassword
   command: 
     - "postgres"
     - "-c"
     - "log_statement=all"
     - "-c"
     - "log_destination=stderr"
     - "-c"
     - "logging_collector=on"
     - "-c"
     - "log_directory=log"
     - "-c"
     - "log_filename=postgresql-%Y-%m-%d_%H%M%S.log"
     - "-c"
     - "log_min_messages=debug1"
     - "-c"
     - "log_min_error_statement=debug1"
     - "-c"
     - "log_min_duration_statement=0"
   volumes:
     - postgres-data:/var/lib/postgresql/data
   ports:
     - "5432:5432"
   healthcheck:
     test: ["CMD-SHELL", "pg_isready -U postgres"]
     interval: 30s
     timeout: 20s
     retries: 3
     start_period: 30s
   networks:
     - app-network
   logging:
     driver: "json-file"
     options:
       max-size: "10m"
       max-file: "3"
       tag: "{{.Name}}"

 langfuse-server:
   image: langfuse/langfuse:2
   platform: linux/amd64
   depends_on:
     postgres:
       condition: service_healthy
   ports:
     - "3000:3000"
   environment:
     - DATABASE_URL=postgresql://postgres:researchpassword@postgres:5432/research_db
     - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
     - ENCRYPTION_KEY=${ENCRYPTION_KEY}
     - NEXTAUTH_URL=${NEXTAUTH_URL}
     - SALT=${SALT}
     # Debug and Logging
     - NODE_ENV=development
     - DEBUG=express:*,app:*
     - LOGGING_LEVEL=debug
     - NEXT_DEBUG=1
     - NEXT_TELEMETRY_DEBUG=1
     - APP_DEBUG=true
     # Langfuse Feature Flags
     - TELEMETRY_ENABLED=${TELEMETRY_ENABLED:-true}
     - LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES=${LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES:-false}
     # Langfuse Initialization Variables
     - LANGFUSE_INIT_ORG_ID=${LANGFUSE_INIT_ORG_ID}
     - LANGFUSE_INIT_ORG_NAME=${LANGFUSE_INIT_ORG_NAME}
     - LANGFUSE_INIT_PROJECT_ID=${LANGFUSE_INIT_PROJECT_ID}
     - LANGFUSE_INIT_PROJECT_NAME=${LANGFUSE_INIT_PROJECT_NAME}
     - LANGFUSE_INIT_USER_EMAIL=${LANGFUSE_INIT_USER_EMAIL}
     - LANGFUSE_INIT_USER_NAME=${LANGFUSE_INIT_USER_NAME}
     - LANGFUSE_INIT_USER_PASSWORD=${LANGFUSE_INIT_USER_PASSWORD}
   networks:
     - app-network
   logging:
     driver: "json-file"
     options:
       max-size: "10m"
       max-file: "3"
       tag: "{{.Name}}"

 research-server:
   container_name: research-server
   build:
     context: .
     dockerfile: Dockerfile
   volumes:
     - .:/app
     - ./prompts:/app/prompts
     - content-data:/data
     - ~/.aws:/root/.aws
   ports:
     - "8000:8000"
     - "5678:5678"
   environment:
     - PYTHONUNBUFFERED=1
     - POSTGRES_CONNECTION=${POSTGRES_CONNECTION}
     - LANGFUSE_HOST=http://langfuse-server:3000
     - LOG_LEVEL=DEBUG
     - UVICORN_LOG_LEVEL=debug
   env_file:
     - .env
   depends_on:
     postgres:
       condition: service_healthy
     langfuse-server:
       condition: service_started
   healthcheck:
     test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
     interval: 45s
     timeout: 20s
     retries: 3
     start_period: 40s
   command: >
     sh -c '
     /app/wait-for-it.sh postgres:5432 -t 60 &&
     echo "Waiting for Langfuse migrations..." &&
     sleep 20 &&
     export PUBLIC_KEY="lf_pk_$$(openssl rand -hex 16)" &&
     export SECRET_KEY="lf_sk_$$(openssl rand -hex 16)" &&
     python init_langfuse.py main \
       --database_url="postgresql://postgres:researchpassword@postgres:5432/research_db" \
       --organization_id="${LANGFUSE_INIT_ORG_ID}" \
       --organization_name="${LANGFUSE_INIT_ORG_NAME}" \
       --project_id="${LANGFUSE_INIT_PROJECT_ID}" \
       --project_name="${LANGFUSE_INIT_PROJECT_NAME}" \
       --default_user_email="${LANGFUSE_INIT_USER_EMAIL}" \
       --salt="${SALT}" \
       --public_key="$${PUBLIC_KEY}" \
       --secret_key="$${SECRET_KEY}" &&
     echo "LANGFUSE_PUBLIC_KEY=$${PUBLIC_KEY}" >> .env &&
     echo "LANGFUSE_SECRET_KEY=$${SECRET_KEY}" >> .env &&
     if [ "${INIT_DB}" = "true" ]; then
       python init_db.py;
     fi &&
     uvicorn app:app --host 0.0.0.0 --port 8000 --reload --log-level debug
     '
   networks:
     - app-network
   logging:
     driver: "json-file"
     options:
       max-size: "10m"
       max-file: "3"
       tag: "{{.Name}}"

volumes:
 postgres-data:
 content-data:
   driver: local

networks:
 app-network:
   driver: bridge
   ipam:
     driver: default